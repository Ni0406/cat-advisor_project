const movieButton = document.getElementById('movie-button');
const placeButton = document.getElementById('place-button');
const resultContainer = document.getElementById('result-container');
const moviePoster = document.getElementById('movie-poster');
const movieTitle = document.getElementById('movie-title');
const movieDescription = document.getElementById('movie-description');
const canvas = document.getElementById('cat-meme-canvas');
const ctx = canvas.getContext('2d');

// --- –ö–õ–Æ–ß–ò API ---
const TMDB_API_KEY = 'a99e35505f6555e562054ac85a8ae4e8';
const CAT_API_KEY = 'live_ikYphFGXeiCBxRYuDklRqSDP9scf8CzWvIrIH2Yr9qv3a2uW7sYDLZzkryeIaDOV'; 


const proxyUrl = 'https://cors-anywhere.herokuapp.com/';

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–º–∞ –Ω–∞ Canvas ---
async function generateCatMeme(text) {
    try {
        const catResponse = await fetch(`https://api.thecatapi.com/v1/images/search?api_key=${CAT_API_KEY}`);
        const catData = await catResponse.json();
        if (!catData || catData.length === 0) throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ—Ç–∏–∫–∞');
        const catImageUrl = catData[0].url;
        const image = new Image();
        image.crossOrigin = "anonymous";
        image.src = proxyUrl + catImageUrl;

        image.onload = () => {
            canvas.width = image.width;
            canvas.height = image.height;
            ctx.drawImage(image, 0, 0);
            const fontSize = image.width / 10;
            ctx.font = `bold ${fontSize}px Impact`;
            ctx.fillStyle = 'white';
            ctx.strokeStyle = 'black';
            ctx.lineWidth = fontSize / 20;
            ctx.textAlign = 'center';
            const topText = text.toUpperCase();
            ctx.strokeText(topText, canvas.width / 2, fontSize * 1.2);
            ctx.fillText(topText, canvas.width / 2, fontSize * 1.2);
        };
        image.onerror = () => { console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ç–∏–∫–∞.'); };
    } catch (error) { console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–º–∞ —Å –∫–æ—Ç–∏–∫–æ–º:', error); }
}

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å–º–æ–≤ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
async function fetchMovieAndCat() {
    resultContainer.classList.remove('hidden');
    movieTitle.textContent = '–ò—â—É —Ñ–∏–ª—å–º...';
    moviePoster.style.display = 'block';
    try {
        const moviePage = Math.floor(Math.random() * 10) + 1;
        const tmdbUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${TMDB_API_KEY}&language=ru-RU&page=${moviePage}`;
        const movieResponse = await fetch(tmdbUrl);
        const movieData = await movieResponse.json();
        const randomMovie = movieData.results[Math.floor(Math.random() * movieData.results.length)];
        
        movieTitle.textContent = randomMovie.title;
        movieDescription.textContent = randomMovie.overview;
        moviePoster.src = `https://image.tmdb.org/t/p/w500${randomMovie.poster_path}`;
        
        await generateCatMeme(randomMovie.title);

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–∞:', error);
        movieTitle.textContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å–º–∞';
    }
}

async function fetchPlaceAndCat() {
    resultContainer.classList.remove('hidden');
    movieTitle.textContent = '–ò—â—É –º–µ—Å—Ç–æ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∫–∞—Ä—Ç–∞—Ö...';
    moviePoster.style.display = 'none';

    try {
        const overpassEndpoint = 'https://overpass-api.de/api/interpreter';
        const lat = '55.7558';
        const lon = '37.6173';
        const radius = 50000; // 50 –∫–º

        const query = `
            [out:json][timeout:25];
            (
              node["amenity"="restaurant"](around:${radius},${lat},${lon});
              way["amenity"="restaurant"](around:${radius},${lat},${lon});
              relation["amenity"="restaurant"](around:${radius},${lat},${lon});
            );
            out body;
            >;
            out skel qt;
        `;

        const response = await fetch(overpassEndpoint, {
            method: 'POST',
            body: query
        });

        if (!response.ok) {
            throw new Error(`–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: ${response.statusText}`);
        }

        const data = await response.json();
        
        const placesWithName = data.elements.filter(element => element.tags && element.tags.name);

        if (placesWithName.length > 0) {
            const randomPlace = placesWithName[Math.floor(Math.random() * placesWithName.length)];
            const placeTags = randomPlace.tags;

            movieTitle.textContent = placeTags.name;
            let description = `–¢–∏–ø: ${placeTags.cuisine || '–∫—É—Ö–Ω—è'}`; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –∫—É—Ö–Ω–∏, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
            description += `\n–ê–¥—Ä–µ—Å: ${placeTags["addr:street"] || ''} ${placeTags["addr:housenumber"] || ''}`;
            movieDescription.textContent = description.trim();

            await generateCatMeme(placeTags.name);
        } else {
            throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –≤ OpenStreetMap.');
        }

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º–µ—Å—Ç–∞ –≤ OpenStreetMap:', error);
        movieTitle.textContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Å—Ç–∞ üö´';
        movieDescription.textContent = `–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: ${error.message}.`;
    }
}


// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π  ---
movieButton.addEventListener('click', fetchMovieAndCat);
placeButton.addEventListener('click', fetchPlaceAndCat);