// –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ HTML-—ç–ª–µ–º–µ–Ω—Ç—ã
const movieButton = document.getElementById('movie-button');
const placeButton = document.getElementById('place-button');

const resultContainer = document.getElementById('result-container');
const moviePoster = document.getElementById('movie-poster');
const movieTitle = document.getElementById('movie-title');
const movieDescription = document.getElementById('movie-description');
const catImage = document.getElementById('cat-image');

// –ö–ª—é—á–∏ API
const TMDB_API_KEY = 'a99e35505f6555e562054ac85a8ae4e8';
const CAT_API_KEY = 'live_ikYphFGXeiCBxRYuDklRqSDP9scf8CzWvIrIH2Yr9qv3a2uW7sYDLZzkryeIaDOV';
const GOOGLE_API_KEY = '–í–ê–®_–ö–õ–Æ–ß_GOOGLE_PLACES_API'; // <-- –í–°–¢–ê–í–¨–¢–ï –°–Æ–î–ê –í–ê–® –ö–õ–Æ–ß GOOGLE PLACES

// –î–∞–Ω–Ω—ã–µ –¥–ª—è Imgflip API
const IMGFLIP_USERNAME = 'GeminiOpat'; // <-- –í–ê–® –õ–û–ì–ò–ù IMGFLIP
const IMGFLIP_PASSWORD = 'GeminiOpat'; // <-- –í–ê–® –ü–ê–†–û–õ–¨ IMGFLIP

// –°–ø–∏—Å–æ–∫ ID –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ —Å –∫–æ—Ç–∏–∫–∞–º–∏ —Å Imgflip
// –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –±–æ–ª—å—à–µ ID –Ω–∞ https://imgflip.com/memetemplates
const catMemeTemplates = ['101288', '40565853', '114585149', '25968021', '89370399', '182449514']; // –î–æ–±–∞–≤–∏–ª –ø–∞—Ä—É –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è


// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ–º–∞ —Å Imgflip ---
async function generateMeme(text) {
    catImage.src = ''; // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
    catImage.alt = '';
    catImage.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–º –Ω–æ–≤—ã–π –º–µ–º

    const randomTemplate = catMemeTemplates[Math.floor(Math.random() * catMemeTemplates.length)];

    const params = new URLSearchParams({
        template_id: randomTemplate,
        username: IMGFLIP_USERNAME,
        password: IMGFLIP_PASSWORD,
        'boxes[0][text]': text, // –¢–µ–∫—Å—Ç –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ –º–µ–º–∞
        // 'boxes[1][text]': '–ê —á—Ç–æ, –Ω–µ–ø–ª–æ—Ö–æ!' // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç, –µ—Å–ª–∏ —à–∞–±–ª–æ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç
    });

    try {
        const response = await fetch('https://api.imgflip.com/caption_image', {
            method: 'POST',
            body: params
        });
        const json = await response.json();

        if (json.success) {
            catImage.src = json.data.url;
            catImage.alt = '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ–º —Å –∫–æ—Ç–∏–∫–æ–º';
            catImage.style.display = 'block';
        } else {
            console.error('Imgflip error:', json.error_message);
            // –ï—Å–ª–∏ –º–µ–º –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª—Å—è, –º–æ–∂–Ω–æ fallback –Ω–∞ –æ–±—ã—á–Ω–æ–≥–æ –∫–æ—Ç–∏–∫–∞ –∏–ª–∏ —Å–∫—Ä—ã—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            // –í—Ä–µ–º–µ–Ω–Ω–æ –¥–æ–±–∞–≤–∏–º —Å—é–¥–∞ Cat API –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç, –µ—Å–ª–∏ Imgflip –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç
            try {
                const catResponse = await fetch(`https://api.thecatapi.com/v1/images/search?api_key=${CAT_API_KEY}`);
                const catData = await catResponse.json();
                if (catData && catData.length > 0 && catData[0].url) {
                    catImage.src = catData[0].url;
                    catImage.alt = '–°–ª—É—á–∞–π–Ω—ã–π –∫–æ—Ç–∏–∫ (–Ω–µ –º–µ–º)';
                    catImage.style.display = 'block';
                }
            } catch (catError) {
                console.error('Fallback cat API error:', catError);
                catImage.style.display = 'none';
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–º–∞:', error);
        // –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ, –µ—Å–ª–∏ fetch –∫ Imgflip —É–ø–∞–ª, –ø–æ–ø—Ä–æ–±—É–µ–º Cat API
        try {
            const catResponse = await fetch(`https://api.thecatapi.com/v1/images/search?api_key=${CAT_API_KEY}`);
            const catData = await catResponse.json();
            if (catData && catData.length > 0 && catData[0].url) {
                catImage.src = catData[0].url;
                catImage.alt = '–°–ª—É—á–∞–π–Ω—ã–π –∫–æ—Ç–∏–∫ (–Ω–µ –º–µ–º)';
                catImage.style.display = 'block';
            }
        } catch (catError) {
            console.error('Fallback cat API error:', catError);
            catImage.style.display = 'none';
        }
    }
}

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ–º–∞ ---
async function fetchMovieAndCat() {
    resultContainer.classList.remove('hidden');
    movieTitle.textContent = '–ó–∞–≥—Ä—É–∑–∫–∞...';
    movieDescription.textContent = '–ü–æ–ª—É—á–∞–µ–º —Ñ–∏–ª—å–º –¥–ª—è –≤–∞—Å...';
    moviePoster.src = '';
    moviePoster.alt = '';
    moviePoster.style.display = 'none';
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
    movieButton.disabled = true;
    placeButton.disabled = true;
    movieButton.textContent = '–ò—â–µ–º –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç...';

    let movieText = '–§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω üòø'; // –î–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –º–µ–º–∞

    try {
        const moviePage = Math.floor(Math.random() * 10) + 1;
        const tmdbUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${TMDB_API_KEY}&language=ru-RU&page=${moviePage}`;

        const movieResponse = await fetch(tmdbUrl);
        if (!movieResponse.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ HTTP –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–∞: ${movieResponse.status}`);
        }
        const movieData = await movieResponse.json();

        if (movieData.results && movieData.results.length > 0) {
            const randomMovie = movieData.results[Math.floor(Math.random() * movieData.results.length)];
            movieTitle.textContent = randomMovie.title || '–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ';
            movieDescription.textContent = randomMovie.overview || '–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.';
            const posterPath = randomMovie.poster_path ? `https://image.tmdb.org/t/p/w500${randomMovie.poster_path}` : '';
            moviePoster.src = posterPath;
            moviePoster.alt = randomMovie.title || '–ü–æ—Å—Ç–µ—Ä —Ñ–∏–ª—å–º–∞';
            moviePoster.style.display = posterPath ? 'block' : 'none';
            movieText = movieTitle.textContent; // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –º–µ–º–∞
        } else {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –∏–∑ TMDb.');
            movieTitle.textContent = '–§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω üòø';
            movieDescription.textContent = '–ö–æ—Ç–∏–∫ —Ä–∞—Å—Ç–µ—Ä—è–ª—Å—è, —Ñ–∏–ª—å–º–æ–≤ –Ω–µ –Ω–∞—à–ª–æ—Å—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.';
            moviePoster.style.display = 'none';
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–∞:', error);
        movieTitle.textContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å–º–∞ üö´';
        movieDescription.textContent = '–£–ø—Å! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ñ–∏–ª—å–º–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
        moviePoster.style.display = 'none';
    } finally {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–µ–º –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞
        await generateMeme(movieText); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∫–∞–∫ —Ç–µ–∫—Å—Ç –¥–ª—è –º–µ–º–∞

        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
        movieButton.disabled = false;
        placeButton.disabled = false;
        movieButton.textContent = '–ü–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º';
    }
}

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ–º–∞ ---
async function fetchPlaceAndCat() {
    resultContainer.classList.remove('hidden');
    movieTitle.textContent = '–ò—â–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω...';
    movieDescription.textContent = '–ü–æ–¥–±–∏—Ä–∞–µ–º –¥–ª—è –≤–∞—Å –æ—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ...';
    moviePoster.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å—Ç–µ—Ä, –æ–Ω –Ω–∞–º –Ω–µ –Ω—É–∂–µ–Ω
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
    movieButton.disabled = true;
    placeButton.disabled = true;
    placeButton.textContent = '–ò—â–µ–º –∏–¥–µ–∞–ª—å–Ω—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω...';

    const location = '55.7558,37.6173'; // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ú–æ—Å–∫–≤—ã
    const radius = 5000; // –†–∞–¥–∏—É—Å 5 –∫–º
    const proxyUrl = 'https://cors-anywhere.herokuapp.com/'; // –ü—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ CORS
    const placesUrl = `${proxyUrl}https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${location}&radius=${radius}&type=restaurant&language=ru&key=${GOOGLE_API_KEY}`;
    
    let placeText = '–†–µ—Å—Ç–æ—Ä–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω üòø'; // –î–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –º–µ–º–∞

    try {
        const placesResponse = await fetch(placesUrl);
        if (!placesResponse.ok) {
             throw new Error(`–û—à–∏–±–∫–∞ HTTP –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ—Å—Ç–∞: ${placesResponse.status}`);
        }
        const placesData = await placesResponse.json();

        if (placesData.results && placesData.results.length > 0) {
            const randomPlace = placesData.results[Math.floor(Math.random() * placesData.results.length)];
            movieTitle.textContent = randomPlace.name || '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ';
            let description = `–†–µ–π—Ç–∏–Ω–≥: ${randomPlace.rating || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'} ‚≠ê (${randomPlace.user_ratings_total || 0} –æ—Ü–µ–Ω–æ–∫)`;
            description += `\n–ê–¥—Ä–µ—Å: ${randomPlace.vicinity || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}`;
            movieDescription.textContent = description;
            placeText = movieTitle.textContent; // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –º–µ–º–∞
        } else {
            movieTitle.textContent = '–†–µ—Å—Ç–æ—Ä–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω üòø';
            movieDescription.textContent = '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–µ—Å—Ç–∞ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á API –∏ CORS –ø—Ä–æ–∫—Å–∏.';
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º–µ—Å—Ç–∞:', error);
        movieTitle.textContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ üö´';
        movieDescription.textContent = '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é –∏–ª–∏ –∫–ª—é—á–æ–º Google Places API.';
    } finally {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–µ–º –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
        await generateMeme(placeText); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –∫–∞–∫ —Ç–µ–∫—Å—Ç –¥–ª—è –º–µ–º–∞

        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
        movieButton.disabled = false;
        placeButton.disabled = false;
        placeButton.textContent = '–ü–æ–¥–æ–±—Ä–∞—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω'; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
    }
}


// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ ---
movieButton.addEventListener('click', fetchMovieAndCat);
placeButton.addEventListener('click', fetchPlaceAndCat);